{
"/Users/darek/ProjectsMac/eniro/ng2-rest/src/resource.service.ts":{"path":"/Users/darek/ProjectsMac/eniro/ng2-rest/src/resource.service.ts","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":22,"7":1,"8":12,"9":12,"10":2,"11":2,"12":10,"13":1,"14":10,"15":10,"16":9,"17":9,"18":1,"19":1,"20":1,"21":7,"22":0,"23":7,"24":7,"25":0,"26":0,"27":7,"28":5,"29":5,"30":2,"31":2,"32":1,"33":5,"34":0,"35":5,"36":5,"37":0,"38":0,"39":5,"40":0,"41":0,"42":5,"43":1,"44":1,"45":1,"46":1},"b":{"1":[2,10],"2":[1,9],"3":[9,1],"4":[0,7],"5":[0,7],"6":[5,2],"7":[0,5],"8":[0,5],"9":[0,5]},"f":{"1":1,"2":22,"3":12,"4":7,"5":5},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":16},"end":{"line":5,"column":28}}},"2":{"name":"Resource","line":6,"loc":{"start":{"line":6,"column":4},"end":{"line":6,"column":28}}},"3":{"name":"(anonymous_3)","line":9,"loc":{"start":{"line":9,"column":29},"end":{"line":9,"column":54}}},"4":{"name":"(anonymous_4)","line":28,"loc":{"start":{"line":28,"column":29},"end":{"line":28,"column":56}}},"5":{"name":"(anonymous_5)","line":45,"loc":{"start":{"line":45,"column":29},"end":{"line":45,"column":56}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":38}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":43}},"4":{"start":{"line":5,"column":0},"end":{"line":66,"column":5}},"5":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"6":{"start":{"line":7,"column":8},"end":{"line":7,"column":25}},"7":{"start":{"line":9,"column":4},"end":{"line":27,"column":6}},"8":{"start":{"line":10,"column":8},"end":{"line":10,"column":98}},"9":{"start":{"line":11,"column":8},"end":{"line":14,"column":9}},"10":{"start":{"line":12,"column":12},"end":{"line":12,"column":56}},"11":{"start":{"line":13,"column":12},"end":{"line":13,"column":25}},"12":{"start":{"line":15,"column":8},"end":{"line":16,"column":47}},"13":{"start":{"line":16,"column":12},"end":{"line":16,"column":47}},"14":{"start":{"line":17,"column":8},"end":{"line":17,"column":38}},"15":{"start":{"line":18,"column":8},"end":{"line":21,"column":9}},"16":{"start":{"line":19,"column":12},"end":{"line":19,"column":83}},"17":{"start":{"line":20,"column":12},"end":{"line":20,"column":25}},"18":{"start":{"line":22,"column":8},"end":{"line":25,"column":10}},"19":{"start":{"line":26,"column":8},"end":{"line":26,"column":20}},"20":{"start":{"line":28,"column":4},"end":{"line":44,"column":6}},"21":{"start":{"line":29,"column":8},"end":{"line":30,"column":53}},"22":{"start":{"line":30,"column":12},"end":{"line":30,"column":53}},"23":{"start":{"line":31,"column":8},"end":{"line":31,"column":38}},"24":{"start":{"line":32,"column":8},"end":{"line":35,"column":9}},"25":{"start":{"line":33,"column":12},"end":{"line":33,"column":54}},"26":{"start":{"line":34,"column":12},"end":{"line":34,"column":25}},"27":{"start":{"line":36,"column":8},"end":{"line":39,"column":9}},"28":{"start":{"line":37,"column":12},"end":{"line":37,"column":80}},"29":{"start":{"line":38,"column":12},"end":{"line":38,"column":25}},"30":{"start":{"line":40,"column":8},"end":{"line":42,"column":42}},"31":{"start":{"line":43,"column":8},"end":{"line":43,"column":20}},"32":{"start":{"line":45,"column":4},"end":{"line":58,"column":6}},"33":{"start":{"line":46,"column":8},"end":{"line":47,"column":53}},"34":{"start":{"line":47,"column":12},"end":{"line":47,"column":53}},"35":{"start":{"line":48,"column":8},"end":{"line":48,"column":38}},"36":{"start":{"line":49,"column":8},"end":{"line":52,"column":9}},"37":{"start":{"line":50,"column":12},"end":{"line":50,"column":54}},"38":{"start":{"line":51,"column":12},"end":{"line":51,"column":19}},"39":{"start":{"line":53,"column":8},"end":{"line":56,"column":9}},"40":{"start":{"line":54,"column":12},"end":{"line":54,"column":79}},"41":{"start":{"line":55,"column":12},"end":{"line":55,"column":19}},"42":{"start":{"line":57,"column":8},"end":{"line":57,"column":71}},"43":{"start":{"line":59,"column":4},"end":{"line":59,"column":28}},"44":{"start":{"line":60,"column":4},"end":{"line":64,"column":17}},"45":{"start":{"line":65,"column":4},"end":{"line":65,"column":20}},"46":{"start":{"line":67,"column":0},"end":{"line":67,"column":28}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":11,"column":8}},{"start":{"line":11,"column":8},"end":{"line":11,"column":8}}]},"2":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":8}},{"start":{"line":15,"column":8},"end":{"line":15,"column":8}}]},"3":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":18,"column":8}},{"start":{"line":18,"column":8},"end":{"line":18,"column":8}}]},"4":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":8}},{"start":{"line":29,"column":8},"end":{"line":29,"column":8}}]},"5":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":32,"column":8}},{"start":{"line":32,"column":8},"end":{"line":32,"column":8}}]},"6":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":36,"column":8}},{"start":{"line":36,"column":8},"end":{"line":36,"column":8}}]},"7":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":8}},{"start":{"line":46,"column":8},"end":{"line":46,"column":8}}]},"8":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":49,"column":8}},{"start":{"line":49,"column":8},"end":{"line":49,"column":8}}]},"9":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":53,"column":8}},{"start":{"line":53,"column":8},"end":{"line":53,"column":8}}]}},"code":["\"use strict\";","var core_1 = require('@angular/core');","var http_1 = require('@angular/http');","var rest_class_1 = require('./rest.class');","var Resource = (function () {","    function Resource(http) {","        this.http = http;","    }","    Resource.prototype.map = function (endpoint, url) {","        var regex = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;","        if (!regex.test(url)) {","            console.error('Url address is not correct');","            return false;","        }","        if (url.charAt(url.length - 1) === '/')","            url = url.slice(0, url.length - 2);","        var e = (endpoint).toString();","        if (Resource.endpoints[e] !== undefined) {","            console.warn('Cannot use map function at the same API endpoint again');","            return false;","        }","        Resource.endpoints[e] = {","            url: url,","            models: {}","        };","        return true;","    };","    Resource.prototype.add = function (endpoint, model) {","        if (model.charAt(0) === '/')","            model = model.slice(1, model.length - 1);","        var e = (endpoint).toString();","        if (Resource.endpoints[e] === undefined) {","            console.error('Endpoint is not mapped !');","            return false;","        }","        if (Resource.endpoints[e].models[model] !== undefined) {","            console.error(\"Model \" + model + \" is already defined in endpoint\");","            return false;","        }","        Resource.endpoints[e].models[model] =","            new rest_class_1.Rest(Resource.endpoints[e].url","                + '/' + model, this.http);","        return true;","    };","    Resource.prototype.api = function (endpoint, model) {","        if (model.charAt(0) === '/')","            model = model.slice(1, model.length - 1);","        var e = (endpoint).toString();","        if (Resource.endpoints[e] === undefined) {","            console.error('Endpoint is not mapped !');","            return;","        }","        if (Resource.endpoints[e].models[model] === undefined) {","            console.error(\"Model \" + model + \" is undefined in this endpoint\");","            return;","        }","        return Resource.endpoints[(endpoint).toString()].models[model];","    };","    Resource.endpoints = {};","    Resource = __decorate([","        core_1.Injectable(),","        __param(0, core_1.Inject(http_1.Http)), ","        __metadata('design:paramtypes', [http_1.Http])","    ], Resource);","    return Resource;","}());","exports.Resource = Resource;",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":22,"9":1,"10":12,"11":12,"12":2,"13":2,"15":10,"16":1,"17":10,"18":10,"19":9,"20":9,"22":1,"26":1,"28":1,"29":7,"30":0,"31":7,"32":7,"33":0,"34":0,"36":7,"37":5,"38":5,"40":2,"43":2,"45":1,"46":5,"47":0,"48":5,"49":5,"50":0,"51":0,"53":5,"54":0,"55":0,"57":5,"59":1,"60":1,"65":1,"67":1}},
"/Users/darek/ProjectsMac/eniro/ng2-rest/src/rest.class.ts":{"path":"/Users/darek/ProjectsMac/eniro/ng2-rest/src/rest.class.ts","s":{"1":1,"2":1,"3":1,"4":1,"5":2,"6":2,"7":2,"8":2,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":2,"20":1,"21":0,"22":0,"23":1,"24":0,"25":2,"26":1,"27":1,"28":0,"29":2,"30":1,"31":0,"32":2,"33":1,"34":0,"35":2,"36":2,"37":2,"38":1,"39":1},"b":{"1":[1,0],"2":[0,1],"3":[0,0],"4":[0,1]},"f":{"1":1,"2":2,"3":1,"4":0,"5":0,"6":1,"7":0,"8":1,"9":0,"10":1,"11":0,"12":1,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":12},"end":{"line":4,"column":24}}},"2":{"name":"Rest","line":5,"loc":{"start":{"line":5,"column":4},"end":{"line":5,"column":34}}},"3":{"name":"(anonymous_3)","line":9,"loc":{"start":{"line":9,"column":21},"end":{"line":9,"column":39}}},"4":{"name":"(anonymous_4)","line":15,"loc":{"start":{"line":15,"column":73},"end":{"line":15,"column":88}}},"5":{"name":"(anonymous_5)","line":17,"loc":{"start":{"line":17,"column":54},"end":{"line":17,"column":69}}},"6":{"name":"(anonymous_6)","line":19,"loc":{"start":{"line":19,"column":19},"end":{"line":19,"column":33}}},"7":{"name":"(anonymous_7)","line":24,"loc":{"start":{"line":24,"column":65},"end":{"line":24,"column":80}}},"8":{"name":"(anonymous_8)","line":26,"loc":{"start":{"line":26,"column":20},"end":{"line":26,"column":36}}},"9":{"name":"(anonymous_9)","line":28,"loc":{"start":{"line":28,"column":90},"end":{"line":28,"column":105}}},"10":{"name":"(anonymous_10)","line":30,"loc":{"start":{"line":30,"column":22},"end":{"line":30,"column":50}}},"11":{"name":"(anonymous_11)","line":31,"loc":{"start":{"line":31,"column":123},"end":{"line":31,"column":138}}},"12":{"name":"(anonymous_12)","line":33,"loc":{"start":{"line":33,"column":22},"end":{"line":33,"column":36}}},"13":{"name":"(anonymous_13)","line":34,"loc":{"start":{"line":34,"column":96},"end":{"line":34,"column":111}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":38}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":0},"end":{"line":41,"column":5}},"4":{"start":{"line":5,"column":4},"end":{"line":39,"column":5}},"5":{"start":{"line":6,"column":8},"end":{"line":6,"column":25}},"6":{"start":{"line":7,"column":8},"end":{"line":7,"column":33}},"7":{"start":{"line":8,"column":8},"end":{"line":8,"column":25}},"8":{"start":{"line":9,"column":8},"end":{"line":18,"column":10}},"9":{"start":{"line":10,"column":12},"end":{"line":10,"column":58}},"10":{"start":{"line":10,"column":37},"end":{"line":10,"column":56}},"11":{"start":{"line":11,"column":12},"end":{"line":16,"column":13}},"12":{"start":{"line":12,"column":16},"end":{"line":13,"column":52}},"13":{"start":{"line":13,"column":20},"end":{"line":13,"column":52}},"14":{"start":{"line":14,"column":16},"end":{"line":14,"column":43}},"15":{"start":{"line":15,"column":16},"end":{"line":15,"column":112}},"16":{"start":{"line":15,"column":90},"end":{"line":15,"column":108}},"17":{"start":{"line":17,"column":12},"end":{"line":17,"column":93}},"18":{"start":{"line":17,"column":71},"end":{"line":17,"column":89}},"19":{"start":{"line":19,"column":8},"end":{"line":25,"column":10}},"20":{"start":{"line":20,"column":12},"end":{"line":23,"column":13}},"21":{"start":{"line":21,"column":16},"end":{"line":21,"column":40}},"22":{"start":{"line":22,"column":16},"end":{"line":22,"column":35}},"23":{"start":{"line":24,"column":12},"end":{"line":24,"column":104}},"24":{"start":{"line":24,"column":82},"end":{"line":24,"column":100}},"25":{"start":{"line":26,"column":8},"end":{"line":29,"column":10}},"26":{"start":{"line":27,"column":12},"end":{"line":27,"column":45}},"27":{"start":{"line":28,"column":12},"end":{"line":28,"column":129}},"28":{"start":{"line":28,"column":107},"end":{"line":28,"column":125}},"29":{"start":{"line":30,"column":8},"end":{"line":32,"column":10}},"30":{"start":{"line":31,"column":12},"end":{"line":31,"column":162}},"31":{"start":{"line":31,"column":140},"end":{"line":31,"column":158}},"32":{"start":{"line":33,"column":8},"end":{"line":35,"column":10}},"33":{"start":{"line":34,"column":12},"end":{"line":34,"column":135}},"34":{"start":{"line":34,"column":113},"end":{"line":34,"column":131}},"35":{"start":{"line":36,"column":8},"end":{"line":36,"column":44}},"36":{"start":{"line":37,"column":8},"end":{"line":37,"column":64}},"37":{"start":{"line":38,"column":8},"end":{"line":38,"column":58}},"38":{"start":{"line":40,"column":4},"end":{"line":40,"column":16}},"39":{"start":{"line":42,"column":0},"end":{"line":42,"column":20}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":12},"end":{"line":10,"column":12}},{"start":{"line":10,"column":12},"end":{"line":10,"column":12}}]},"2":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":12},"end":{"line":11,"column":12}},{"start":{"line":11,"column":12},"end":{"line":11,"column":12}}]},"3":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":16},"end":{"line":12,"column":16}},{"start":{"line":12,"column":16},"end":{"line":12,"column":16}}]},"4":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":12},"end":{"line":20,"column":12}},{"start":{"line":20,"column":12},"end":{"line":20,"column":12}}]}},"code":["\"use strict\";","var http_1 = require('@angular/http');","require('rxjs/add/operator/map');","var Rest = (function () {","    function Rest(endpoint, http) {","        var _this = this;","        this.endpoint = endpoint;","        this.http = http;","        this.query = function (params) {","            if (params === void 0) { params = undefined; }","            if (params !== undefined) {","                if (typeof params === 'object')","                    params = JSON.stringify(params);","                params = encodeURI(params);","                return _this.http.get(_this.endpoint + '/' + params).map(function (res) { return res.json(); });","            }","            return _this.http.get(_this.endpoint).map(function (res) { return res.json(); });","        };","        this.get = function (id) {","            if (typeof id === 'object') {","                id = JSON.stringify(id);","                id = encodeURI(id);","            }","            return _this.http.get(_this.endpoint + '/' + id).map(function (res) { return res.json(); });","        };","        this.save = function (item) {","            var toAdd = JSON.stringify(item);","            return _this.http.post(_this.endpoint, toAdd, { headers: _this.headers }).map(function (res) { return res.json(); });","        };","        this.update = function (id, itemToUpdate) {","            return _this.http.put(_this.endpoint + '/' + id, JSON.stringify(itemToUpdate), { headers: _this.headers }).map(function (res) { return res.json(); });","        };","        this.remove = function (id) {","            return _this.http.delete(_this.endpoint + '/' + id, { headers: _this.headers }).map(function (res) { return res.json(); });","        };","        this.headers = new http_1.Headers();","        this.headers.append('Content-Type', 'application/json');","        this.headers.append('Accept', 'application/json');","    }","    return Rest;","}());","exports.Rest = Rest;",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":2,"7":2,"8":2,"9":2,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"17":1,"19":2,"20":1,"21":0,"22":0,"24":1,"26":2,"27":1,"28":1,"30":2,"31":1,"33":2,"34":1,"36":2,"37":2,"38":2,"40":1,"42":1}},
"/Users/darek/ProjectsMac/eniro/ng2-rest/src/test/index.ts":{"path":"/Users/darek/ProjectsMac/eniro/ng2-rest/src/test/index.ts","s":{"1":1,"2":4,"3":4,"4":4,"5":1,"6":1,"7":1,"8":1},"b":{"1":[4,0]},"f":{"1":4},"fnMap":{"1":{"name":"__export","line":2,"loc":{"start":{"line":2,"column":0},"end":{"line":2,"column":21}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":4,"column":1}},"2":{"start":{"line":3,"column":4},"end":{"line":3,"column":71}},"3":{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},"4":{"start":{"line":3,"column":53},"end":{"line":3,"column":71}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":28}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":36}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":36}},"8":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":21},"end":{"line":3,"column":21}},{"start":{"line":3,"column":21},"end":{"line":3,"column":21}}]}},"code":["\"use strict\";","function __export(m) {","    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];","}","__export(require('./mock'));","__export(require('./resource-map'));","__export(require('./resource-add'));","__export(require('./resource-rest'));",""],"l":{"2":1,"3":4,"5":1,"6":1,"7":1,"8":1}},
"/Users/darek/ProjectsMac/eniro/ng2-rest/src/test/mock/index.ts":{"path":"/Users/darek/ProjectsMac/eniro/ng2-rest/src/test/mock/index.ts","s":{"1":1,"2":1,"3":1,"4":1,"5":1},"b":{"1":[1,0]},"f":{"1":1},"fnMap":{"1":{"name":"__export","line":2,"loc":{"start":{"line":2,"column":0},"end":{"line":2,"column":21}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":4,"column":1}},"2":{"start":{"line":3,"column":4},"end":{"line":3,"column":71}},"3":{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},"4":{"start":{"line":3,"column":53},"end":{"line":3,"column":71}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":32}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":21},"end":{"line":3,"column":21}},{"start":{"line":3,"column":21},"end":{"line":3,"column":21}}]}},"code":["\"use strict\";","function __export(m) {","    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];","}","__export(require('./api.enum'));",""],"l":{"2":1,"3":1,"5":1}},
"/Users/darek/ProjectsMac/eniro/ng2-rest/src/test/mock/api.enum.ts":{"path":"/Users/darek/ProjectsMac/eniro/ng2-rest/src/test/mock/api.enum.ts","s":{"1":1,"2":1,"3":1,"4":1},"b":{"1":[1,1]},"f":{"1":1},"fnMap":{"1":{"name":"(anonymous_1)","line":2,"loc":{"start":{"line":2,"column":1},"end":{"line":2,"column":17}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":5,"column":40}},"2":{"start":{"line":3,"column":4},"end":{"line":3,"column":38}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":40}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}}},"branchMap":{"1":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":3},"end":{"line":5,"column":15}},{"start":{"line":5,"column":20},"end":{"line":5,"column":37}}]}},"code":["\"use strict\";","(function (APIS) {","    APIS[APIS[\"FIRST\"] = 0] = \"FIRST\";","    APIS[APIS[\"SECOND\"] = 1] = \"SECOND\";","})(exports.APIS || (exports.APIS = {}));","var APIS = exports.APIS;",""],"l":{"2":1,"3":1,"4":1,"6":1}},
"/Users/darek/ProjectsMac/eniro/ng2-rest/src/test/resource-map.ts":{"path":"/Users/darek/ProjectsMac/eniro/ng2-rest/src/test/resource-map.ts","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":5,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1},"b":{},"f":{"1":1,"2":1,"3":1,"4":5,"5":1,"6":1,"7":1,"8":1,"9":1},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":15},"end":{"line":9,"column":27}}},"2":{"name":"TestMap","line":10,"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":23}}},"3":{"name":"(anonymous_3)","line":11,"loc":{"start":{"line":11,"column":28},"end":{"line":11,"column":40}}},"4":{"name":"(anonymous_4)","line":12,"loc":{"start":{"line":12,"column":42},"end":{"line":12,"column":54}}},"5":{"name":"(anonymous_5)","line":17,"loc":{"start":{"line":17,"column":120},"end":{"line":17,"column":142}}},"6":{"name":"(anonymous_6)","line":23,"loc":{"start":{"line":23,"column":120},"end":{"line":23,"column":142}}},"7":{"name":"(anonymous_7)","line":27,"loc":{"start":{"line":27,"column":122},"end":{"line":27,"column":144}}},"8":{"name":"(anonymous_8)","line":31,"loc":{"start":{"line":31,"column":135},"end":{"line":31,"column":157}}},"9":{"name":"(anonymous_9)","line":35,"loc":{"start":{"line":35,"column":137},"end":{"line":35,"column":159}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":38}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":49}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":56}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"7":{"start":{"line":9,"column":0},"end":{"line":42,"column":5}},"8":{"start":{"line":10,"column":4},"end":{"line":40,"column":5}},"9":{"start":{"line":11,"column":8},"end":{"line":39,"column":11}},"10":{"start":{"line":12,"column":12},"end":{"line":16,"column":18}},"11":{"start":{"line":12,"column":56},"end":{"line":16,"column":14}},"12":{"start":{"line":17,"column":12},"end":{"line":22,"column":16}},"13":{"start":{"line":18,"column":16},"end":{"line":18,"column":61}},"14":{"start":{"line":19,"column":16},"end":{"line":19,"column":50}},"15":{"start":{"line":20,"column":16},"end":{"line":20,"column":70}},"16":{"start":{"line":21,"column":16},"end":{"line":21,"column":69}},"17":{"start":{"line":23,"column":12},"end":{"line":26,"column":16}},"18":{"start":{"line":24,"column":16},"end":{"line":24,"column":61}},"19":{"start":{"line":25,"column":16},"end":{"line":25,"column":91}},"20":{"start":{"line":27,"column":12},"end":{"line":30,"column":16}},"21":{"start":{"line":28,"column":16},"end":{"line":28,"column":61}},"22":{"start":{"line":29,"column":16},"end":{"line":29,"column":90}},"23":{"start":{"line":31,"column":12},"end":{"line":34,"column":16}},"24":{"start":{"line":32,"column":16},"end":{"line":32,"column":61}},"25":{"start":{"line":33,"column":16},"end":{"line":33,"column":73}},"26":{"start":{"line":35,"column":12},"end":{"line":38,"column":16}},"27":{"start":{"line":36,"column":16},"end":{"line":36,"column":61}},"28":{"start":{"line":37,"column":16},"end":{"line":37,"column":75}},"29":{"start":{"line":41,"column":4},"end":{"line":41,"column":19}},"30":{"start":{"line":43,"column":0},"end":{"line":43,"column":26}}},"branchMap":{},"code":["\"use strict\";","var testing_1 = require('@angular/core/testing');","// Load the implementations that should be tested","var core_1 = require('@angular/core');","var http_1 = require('@angular/http');","var testing_2 = require('@angular/http/testing');","var resource_service_1 = require('../resource.service');","var mock_1 = require('./mock');","var TestMap = (function () {","    function TestMap() {","        describe('mapping', function () {","            testing_1.beforeEachProviders(function () { return [","                http_1.Http, http_1.HTTP_PROVIDERS,","                core_1.provide(http_1.XHRBackend, { useClass: testing_2.MockBackend }),","                resource_service_1.Resource","            ]; });","            testing_1.it('should map model just one time', testing_1.inject([resource_service_1.Resource, http_1.Http], function (rest, http) {","                rest = new resource_service_1.Resource(http);","                var url = 'https://somewhere.com';","                expect(rest.map(mock_1.APIS.FIRST, url)).toBeTruthy();","                expect(rest.map(mock_1.APIS.FIRST, url)).toBeFalsy();","            }));","            testing_1.it('should map correct url with / ', testing_1.inject([resource_service_1.Resource, http_1.Http], function (rest, http) {","                rest = new resource_service_1.Resource(http);","                expect(rest.map(mock_1.APIS.FIRST, 'http://localhost:8080/')).toBeTruthy();","            }));","            testing_1.it('should map correct url witout / ', testing_1.inject([resource_service_1.Resource, http_1.Http], function (rest, http) {","                rest = new resource_service_1.Resource(http);","                expect(rest.map(mock_1.APIS.FIRST, 'http://localhost:8080')).toBeTruthy();","            }));","            testing_1.it('should reject incorrect url from random chars', testing_1.inject([resource_service_1.Resource, http_1.Http], function (rest, http) {","                rest = new resource_service_1.Resource(http);","                expect(rest.map(mock_1.APIS.FIRST, 'asdas')).toBeFalsy();","            }));","            testing_1.it('should reject incorrect url withour addres body', testing_1.inject([resource_service_1.Resource, http_1.Http], function (rest, http) {","                rest = new resource_service_1.Resource(http);","                expect(rest.map(mock_1.APIS.FIRST, 'http://')).toBeFalsy();","            }));","        });","    }","    return TestMap;","}());","exports.TestMap = TestMap;",""],"l":{"2":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":5,"17":1,"18":1,"19":1,"20":1,"21":1,"23":1,"24":1,"25":1,"27":1,"28":1,"29":1,"31":1,"32":1,"33":1,"35":1,"36":1,"37":1,"41":1,"43":1}},
"/Users/darek/ProjectsMac/eniro/ng2-rest/src/test/resource-add.ts":{"path":"/Users/darek/ProjectsMac/eniro/ng2-rest/src/test/resource-add.ts","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":1,"25":1},"b":{},"f":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":15},"end":{"line":9,"column":27}}},"2":{"name":"TestAdd","line":10,"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":23}}},"3":{"name":"(anonymous_3)","line":11,"loc":{"start":{"line":11,"column":27},"end":{"line":11,"column":39}}},"4":{"name":"(anonymous_4)","line":13,"loc":{"start":{"line":13,"column":42},"end":{"line":13,"column":54}}},"5":{"name":"(anonymous_5)","line":18,"loc":{"start":{"line":18,"column":132},"end":{"line":18,"column":154}}},"6":{"name":"(anonymous_6)","line":25,"loc":{"start":{"line":25,"column":111},"end":{"line":25,"column":133}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":38}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":49}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":56}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"7":{"start":{"line":9,"column":0},"end":{"line":34,"column":5}},"8":{"start":{"line":10,"column":4},"end":{"line":32,"column":5}},"9":{"start":{"line":11,"column":8},"end":{"line":31,"column":11}},"10":{"start":{"line":12,"column":12},"end":{"line":12,"column":21}},"11":{"start":{"line":13,"column":12},"end":{"line":17,"column":18}},"12":{"start":{"line":13,"column":56},"end":{"line":17,"column":14}},"13":{"start":{"line":18,"column":12},"end":{"line":24,"column":16}},"14":{"start":{"line":19,"column":16},"end":{"line":19,"column":61}},"15":{"start":{"line":20,"column":16},"end":{"line":20,"column":50}},"16":{"start":{"line":21,"column":16},"end":{"line":21,"column":49}},"17":{"start":{"line":22,"column":16},"end":{"line":22,"column":73}},"18":{"start":{"line":23,"column":16},"end":{"line":23,"column":72}},"19":{"start":{"line":25,"column":12},"end":{"line":30,"column":16}},"20":{"start":{"line":26,"column":16},"end":{"line":26,"column":61}},"21":{"start":{"line":27,"column":16},"end":{"line":27,"column":50}},"22":{"start":{"line":28,"column":16},"end":{"line":28,"column":49}},"23":{"start":{"line":29,"column":16},"end":{"line":29,"column":72}},"24":{"start":{"line":33,"column":4},"end":{"line":33,"column":19}},"25":{"start":{"line":35,"column":0},"end":{"line":35,"column":26}}},"branchMap":{},"code":["\"use strict\";","var testing_1 = require('@angular/core/testing');","// Load the implementations that should be tested","var core_1 = require('@angular/core');","var http_1 = require('@angular/http');","var testing_2 = require('@angular/http/testing');","var resource_service_1 = require('../resource.service');","var mock_1 = require('./mock');","var TestAdd = (function () {","    function TestAdd() {","        describe('adding', function () {","            var rest;","            testing_1.beforeEachProviders(function () { return [","                http_1.Http, http_1.HTTP_PROVIDERS,","                core_1.provide(http_1.XHRBackend, { useClass: testing_2.MockBackend }),","                resource_service_1.Resource","            ]; });","            testing_1.it('should add model to endpoint just one time', testing_1.inject([resource_service_1.Resource, http_1.Http], function (rest, http) {","                rest = new resource_service_1.Resource(http);","                var url = 'https://somewhere.com';","                rest.map(mock_1.APIS.FIRST, url);","                expect(rest.add(mock_1.APIS.FIRST, 'user')).toBeTruthy();","                expect(rest.add(mock_1.APIS.FIRST, 'user')).toBeFalsy();","            }));","            testing_1.xit('should not add model', testing_1.inject([resource_service_1.Resource, http_1.Http], function (rest, http) {","                rest = new resource_service_1.Resource(http);","                var url = 'https://somewhere.com';","                rest.map(mock_1.APIS.FIRST, url);","                expect(rest.add(mock_1.APIS.FIRST, 'user')).toBeFalsy();","            }));","        });","    }","    return TestAdd;","}());","exports.TestAdd = TestAdd;",""],"l":{"2":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"25":1,"26":0,"27":0,"28":0,"29":0,"33":1,"35":1}},
"/Users/darek/ProjectsMac/eniro/ng2-rest/src/test/resource-rest.ts":{"path":"/Users/darek/ProjectsMac/eniro/ng2-rest/src/test/resource-rest.ts","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":5,"15":1,"16":5,"17":5,"18":5,"19":5,"20":5,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":1,"28":1,"29":1,"30":1,"31":1,"32":0,"33":0,"34":1,"35":1,"36":0,"37":0,"38":0,"39":0,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":0,"48":0,"49":1,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":1,"58":1,"59":1,"60":1,"61":0,"62":0,"63":1,"64":1,"65":0,"66":0,"67":0,"68":0,"69":1,"70":1,"71":1,"72":1,"73":1,"74":0,"75":0,"76":1,"77":1,"78":0,"79":0,"80":0,"81":0,"82":1,"83":1,"84":1,"85":1,"86":1,"87":0,"88":0,"89":1,"90":15,"91":0,"92":15,"93":15,"94":15,"95":1,"96":1},"b":{"1":[0,15]},"f":{"1":1,"2":1,"3":1,"4":5,"5":5,"6":1,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":15},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":16},"end":{"line":9,"column":28}}},"2":{"name":"TestRest","line":10,"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":24}}},"3":{"name":"(anonymous_3)","line":12,"loc":{"start":{"line":12,"column":29},"end":{"line":12,"column":41}}},"4":{"name":"(anonymous_4)","line":15,"loc":{"start":{"line":15,"column":42},"end":{"line":15,"column":54}}},"5":{"name":"(anonymous_5)","line":21,"loc":{"start":{"line":21,"column":23},"end":{"line":21,"column":35}}},"6":{"name":"(anonymous_6)","line":32,"loc":{"start":{"line":32,"column":150},"end":{"line":32,"column":181}}},"7":{"name":"(anonymous_7)","line":33,"loc":{"start":{"line":33,"column":46},"end":{"line":33,"column":59}}},"8":{"name":"(anonymous_8)","line":45,"loc":{"start":{"line":45,"column":70},"end":{"line":45,"column":85}}},"9":{"name":"(anonymous_9)","line":47,"loc":{"start":{"line":47,"column":19},"end":{"line":47,"column":34}}},"10":{"name":"(anonymous_10)","line":51,"loc":{"start":{"line":51,"column":157},"end":{"line":51,"column":188}}},"11":{"name":"(anonymous_11)","line":52,"loc":{"start":{"line":52,"column":46},"end":{"line":52,"column":59}}},"12":{"name":"(anonymous_12)","line":66,"loc":{"start":{"line":66,"column":28},"end":{"line":66,"column":43}}},"13":{"name":"(anonymous_13)","line":68,"loc":{"start":{"line":68,"column":19},"end":{"line":68,"column":34}}},"14":{"name":"(anonymous_14)","line":72,"loc":{"start":{"line":72,"column":130},"end":{"line":72,"column":161}}},"15":{"name":"(anonymous_15)","line":73,"loc":{"start":{"line":73,"column":46},"end":{"line":73,"column":59}}},"16":{"name":"(anonymous_16)","line":86,"loc":{"start":{"line":86,"column":74},"end":{"line":86,"column":89}}},"17":{"name":"(anonymous_17)","line":88,"loc":{"start":{"line":88,"column":19},"end":{"line":88,"column":34}}},"18":{"name":"(anonymous_18)","line":92,"loc":{"start":{"line":92,"column":132},"end":{"line":92,"column":163}}},"19":{"name":"(anonymous_19)","line":93,"loc":{"start":{"line":93,"column":46},"end":{"line":93,"column":59}}},"20":{"name":"(anonymous_20)","line":105,"loc":{"start":{"line":105,"column":79},"end":{"line":105,"column":94}}},"21":{"name":"(anonymous_21)","line":107,"loc":{"start":{"line":107,"column":19},"end":{"line":107,"column":34}}},"22":{"name":"(anonymous_22)","line":111,"loc":{"start":{"line":111,"column":132},"end":{"line":111,"column":163}}},"23":{"name":"(anonymous_23)","line":112,"loc":{"start":{"line":112,"column":46},"end":{"line":112,"column":59}}},"24":{"name":"(anonymous_24)","line":124,"loc":{"start":{"line":124,"column":73},"end":{"line":124,"column":88}}},"25":{"name":"(anonymous_25)","line":126,"loc":{"start":{"line":126,"column":19},"end":{"line":126,"column":34}}},"26":{"name":"(anonymous_26)","line":132,"loc":{"start":{"line":132,"column":31},"end":{"line":132,"column":48}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":38}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":49}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":56}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"7":{"start":{"line":9,"column":0},"end":{"line":139,"column":5}},"8":{"start":{"line":10,"column":4},"end":{"line":131,"column":5}},"9":{"start":{"line":11,"column":8},"end":{"line":11,"column":25}},"10":{"start":{"line":12,"column":8},"end":{"line":130,"column":11}},"11":{"start":{"line":13,"column":12},"end":{"line":13,"column":21}},"12":{"start":{"line":14,"column":12},"end":{"line":14,"column":22}},"13":{"start":{"line":15,"column":12},"end":{"line":20,"column":18}},"14":{"start":{"line":15,"column":56},"end":{"line":20,"column":14}},"15":{"start":{"line":21,"column":12},"end":{"line":31,"column":15}},"16":{"start":{"line":22,"column":16},"end":{"line":26,"column":18}},"17":{"start":{"line":27,"column":16},"end":{"line":27,"column":27}},"18":{"start":{"line":28,"column":16},"end":{"line":28,"column":51}},"19":{"start":{"line":29,"column":16},"end":{"line":29,"column":51}},"20":{"start":{"line":30,"column":16},"end":{"line":30,"column":51}},"21":{"start":{"line":32,"column":12},"end":{"line":50,"column":16}},"22":{"start":{"line":33,"column":16},"end":{"line":40,"column":19}},"23":{"start":{"line":34,"column":20},"end":{"line":34,"column":76}},"24":{"start":{"line":35,"column":20},"end":{"line":35,"column":80}},"25":{"start":{"line":36,"column":20},"end":{"line":38,"column":24}},"26":{"start":{"line":39,"column":20},"end":{"line":39,"column":39}},"27":{"start":{"line":41,"column":16},"end":{"line":41,"column":61}},"28":{"start":{"line":42,"column":16},"end":{"line":42,"column":50}},"29":{"start":{"line":43,"column":16},"end":{"line":43,"column":49}},"30":{"start":{"line":44,"column":16},"end":{"line":44,"column":53}},"31":{"start":{"line":45,"column":16},"end":{"line":49,"column":19}},"32":{"start":{"line":46,"column":20},"end":{"line":46,"column":46}},"33":{"start":{"line":48,"column":20},"end":{"line":48,"column":25}},"34":{"start":{"line":51,"column":12},"end":{"line":71,"column":16}},"35":{"start":{"line":52,"column":16},"end":{"line":59,"column":19}},"36":{"start":{"line":53,"column":20},"end":{"line":53,"column":76}},"37":{"start":{"line":54,"column":20},"end":{"line":54,"column":78}},"38":{"start":{"line":55,"column":20},"end":{"line":57,"column":24}},"39":{"start":{"line":58,"column":20},"end":{"line":58,"column":39}},"40":{"start":{"line":60,"column":16},"end":{"line":60,"column":61}},"41":{"start":{"line":61,"column":16},"end":{"line":61,"column":50}},"42":{"start":{"line":62,"column":16},"end":{"line":62,"column":49}},"43":{"start":{"line":63,"column":16},"end":{"line":63,"column":53}},"44":{"start":{"line":64,"column":16},"end":{"line":64,"column":69}},"45":{"start":{"line":65,"column":16},"end":{"line":65,"column":40}},"46":{"start":{"line":66,"column":16},"end":{"line":70,"column":19}},"47":{"start":{"line":67,"column":20},"end":{"line":67,"column":47}},"48":{"start":{"line":69,"column":20},"end":{"line":69,"column":25}},"49":{"start":{"line":72,"column":12},"end":{"line":91,"column":16}},"50":{"start":{"line":73,"column":16},"end":{"line":81,"column":19}},"51":{"start":{"line":74,"column":20},"end":{"line":74,"column":77}},"52":{"start":{"line":75,"column":20},"end":{"line":75,"column":78}},"53":{"start":{"line":76,"column":20},"end":{"line":76,"column":32}},"54":{"start":{"line":77,"column":20},"end":{"line":79,"column":24}},"55":{"start":{"line":80,"column":20},"end":{"line":80,"column":39}},"56":{"start":{"line":82,"column":16},"end":{"line":82,"column":61}},"57":{"start":{"line":83,"column":16},"end":{"line":83,"column":50}},"58":{"start":{"line":84,"column":16},"end":{"line":84,"column":49}},"59":{"start":{"line":85,"column":16},"end":{"line":85,"column":53}},"60":{"start":{"line":86,"column":16},"end":{"line":90,"column":19}},"61":{"start":{"line":87,"column":20},"end":{"line":87,"column":49}},"62":{"start":{"line":89,"column":20},"end":{"line":89,"column":25}},"63":{"start":{"line":92,"column":12},"end":{"line":110,"column":16}},"64":{"start":{"line":93,"column":16},"end":{"line":100,"column":19}},"65":{"start":{"line":94,"column":20},"end":{"line":94,"column":76}},"66":{"start":{"line":95,"column":20},"end":{"line":95,"column":80}},"67":{"start":{"line":96,"column":20},"end":{"line":98,"column":24}},"68":{"start":{"line":99,"column":20},"end":{"line":99,"column":39}},"69":{"start":{"line":101,"column":16},"end":{"line":101,"column":61}},"70":{"start":{"line":102,"column":16},"end":{"line":102,"column":50}},"71":{"start":{"line":103,"column":16},"end":{"line":103,"column":49}},"72":{"start":{"line":104,"column":16},"end":{"line":104,"column":53}},"73":{"start":{"line":105,"column":16},"end":{"line":109,"column":19}},"74":{"start":{"line":106,"column":20},"end":{"line":106,"column":46}},"75":{"start":{"line":108,"column":20},"end":{"line":108,"column":25}},"76":{"start":{"line":111,"column":12},"end":{"line":129,"column":16}},"77":{"start":{"line":112,"column":16},"end":{"line":119,"column":19}},"78":{"start":{"line":113,"column":20},"end":{"line":113,"column":79}},"79":{"start":{"line":114,"column":20},"end":{"line":114,"column":80}},"80":{"start":{"line":115,"column":20},"end":{"line":117,"column":24}},"81":{"start":{"line":118,"column":20},"end":{"line":118,"column":39}},"82":{"start":{"line":120,"column":16},"end":{"line":120,"column":61}},"83":{"start":{"line":121,"column":16},"end":{"line":121,"column":50}},"84":{"start":{"line":122,"column":16},"end":{"line":122,"column":49}},"85":{"start":{"line":123,"column":16},"end":{"line":123,"column":53}},"86":{"start":{"line":124,"column":16},"end":{"line":128,"column":19}},"87":{"start":{"line":125,"column":20},"end":{"line":125,"column":46}},"88":{"start":{"line":127,"column":20},"end":{"line":127,"column":25}},"89":{"start":{"line":132,"column":4},"end":{"line":137,"column":6}},"90":{"start":{"line":133,"column":8},"end":{"line":133,"column":39}},"91":{"start":{"line":133,"column":29},"end":{"line":133,"column":37}},"92":{"start":{"line":134,"column":8},"end":{"line":134,"column":46}},"93":{"start":{"line":135,"column":8},"end":{"line":135,"column":21}},"94":{"start":{"line":136,"column":8},"end":{"line":136,"column":17}},"95":{"start":{"line":138,"column":4},"end":{"line":138,"column":20}},"96":{"start":{"line":140,"column":0},"end":{"line":140,"column":28}}},"branchMap":{"1":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":8},"end":{"line":133,"column":8}},{"start":{"line":133,"column":8},"end":{"line":133,"column":8}}]}},"code":["\"use strict\";","var testing_1 = require('@angular/core/testing');","// Load the implementations that should be tested","var core_1 = require('@angular/core');","var http_1 = require('@angular/http');","var testing_2 = require('@angular/http/testing');","var resource_service_1 = require('../resource.service');","var mock_1 = require('./mock');","var TestRest = (function () {","    function TestRest() {","        var _this = this;","        describe('rest api', function () {","            var user;","            var users;","            testing_1.beforeEachProviders(function () { return [","                http_1.Http, http_1.HTTP_PROVIDERS,","                core_1.provide(http_1.XHRBackend, { useClass: testing_2.MockBackend }),","                resource_service_1.Resource,","                testing_2.MockBackend","            ]; });","            beforeEach(function () {","                user = {","                    name: 'Dariusz',","                    age: 25,","                    id: undefined","                };","                users = [];","                users.push(_this.clone(user, '1'));","                users.push(_this.clone(user, '2'));","                users.push(_this.clone(user, '3'));","            });","            testing_1.it('should retrive model with get request', testing_1.inject([resource_service_1.Resource, http_1.Http, testing_2.MockBackend], function (rest, http, backend) {","                backend.connections.subscribe(function (c) {","                    expect(c.request.method).toBe(http_1.RequestMethod.Get);","                    expect(c.request.url).toBe('https://somewhere.com/users/0');","                    var res = new http_1.Response(new http_1.ResponseOptions({","                        body: JSON.stringify(user)","                    }));","                    c.mockRespond(res);","                });","                rest = new resource_service_1.Resource(http);","                var url = 'https://somewhere.com';","                rest.map(mock_1.APIS.FIRST, url);","                rest.add(mock_1.APIS.FIRST, 'users');","                rest.api(mock_1.APIS.FIRST, 'users').get(0).subscribe(function (res) {","                    expect(res).toEqual(user);","                }, function (err) {","                    fail;","                });","            }));","            testing_1.it('should retrive models array with get request', testing_1.inject([resource_service_1.Resource, http_1.Http, testing_2.MockBackend], function (rest, http, backend) {","                backend.connections.subscribe(function (c) {","                    expect(c.request.method).toBe(http_1.RequestMethod.Get);","                    expect(c.request.url).toBe('https://somewhere.com/users');","                    var res = new http_1.Response(new http_1.ResponseOptions({","                        body: JSON.stringify(users)","                    }));","                    c.mockRespond(res);","                });","                rest = new resource_service_1.Resource(http);","                var url = 'https://somewhere.com';","                rest.map(mock_1.APIS.FIRST, url);","                rest.add(mock_1.APIS.FIRST, 'users');","                var r = rest.api(mock_1.APIS.FIRST, 'users').query();","                expect(r).toBeDefined();","                r.subscribe(function (res) {","                    expect(res).toEqual(users);","                }, function (err) {","                    fail;","                });","            }));","            testing_1.it('should save model', testing_1.inject([resource_service_1.Resource, http_1.Http, testing_2.MockBackend], function (rest, http, backend) {","                backend.connections.subscribe(function (c) {","                    expect(c.request.method).toBe(http_1.RequestMethod.Post);","                    expect(c.request.url).toBe('https://somewhere.com/users');","                    user.id = 1;","                    var res = new http_1.Response(new http_1.ResponseOptions({","                        body: JSON.stringify(user)","                    }));","                    c.mockRespond(res);","                });","                rest = new resource_service_1.Resource(http);","                var url = 'https://somewhere.com';","                rest.map(mock_1.APIS.FIRST, url);","                rest.add(mock_1.APIS.FIRST, 'users');","                rest.api(mock_1.APIS.FIRST, 'users').save(user).subscribe(function (res) {","                    expect(res.id).toBeDefined();","                }, function (err) {","                    fail;","                });","            }));","            testing_1.it('should update model', testing_1.inject([resource_service_1.Resource, http_1.Http, testing_2.MockBackend], function (rest, http, backend) {","                backend.connections.subscribe(function (c) {","                    expect(c.request.method).toBe(http_1.RequestMethod.Put);","                    expect(c.request.url).toBe('https://somewhere.com/users/0');","                    var res = new http_1.Response(new http_1.ResponseOptions({","                        body: JSON.stringify(user)","                    }));","                    c.mockRespond(res);","                });","                rest = new resource_service_1.Resource(http);","                var url = 'https://somewhere.com';","                rest.map(mock_1.APIS.FIRST, url);","                rest.add(mock_1.APIS.FIRST, 'users');","                rest.api(mock_1.APIS.FIRST, 'users').update(0, user).subscribe(function (res) {","                    expect(res).toEqual(user);","                }, function (err) {","                    fail;","                });","            }));","            testing_1.it('should delete model', testing_1.inject([resource_service_1.Resource, http_1.Http, testing_2.MockBackend], function (rest, http, backend) {","                backend.connections.subscribe(function (c) {","                    expect(c.request.method).toBe(http_1.RequestMethod.Delete);","                    expect(c.request.url).toBe('https://somewhere.com/users/0');","                    var res = new http_1.Response(new http_1.ResponseOptions({","                        body: JSON.stringify(user)","                    }));","                    c.mockRespond(res);","                });","                rest = new resource_service_1.Resource(http);","                var url = 'https://somewhere.com';","                rest.map(mock_1.APIS.FIRST, url);","                rest.add(mock_1.APIS.FIRST, 'users');","                rest.api(mock_1.APIS.FIRST, 'users').remove(0).subscribe(function (res) {","                    expect(res).toEqual(user);","                }, function (err) {","                    fail;","                });","            }));","        });","    }","    TestRest.prototype.clone = function (u, id) {","        if (id === void 0) { id = ''; }","        var t = JSON.parse(JSON.stringify(u));","        t.name += id;","        return t;","    };","    return TestRest;","}());","exports.TestRest = TestRest;",""],"l":{"2":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":5,"21":1,"22":5,"27":5,"28":5,"29":5,"30":5,"32":1,"33":1,"34":0,"35":0,"36":0,"39":0,"41":1,"42":1,"43":1,"44":1,"45":1,"46":0,"48":0,"51":1,"52":1,"53":0,"54":0,"55":0,"58":0,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":0,"69":0,"72":1,"73":1,"74":0,"75":0,"76":0,"77":0,"80":0,"82":1,"83":1,"84":1,"85":1,"86":1,"87":0,"89":0,"92":1,"93":1,"94":0,"95":0,"96":0,"99":0,"101":1,"102":1,"103":1,"104":1,"105":1,"106":0,"108":0,"111":1,"112":1,"113":0,"114":0,"115":0,"118":0,"120":1,"121":1,"122":1,"123":1,"124":1,"125":0,"127":0,"132":1,"133":15,"134":15,"135":15,"136":15,"138":1,"140":1}}}
